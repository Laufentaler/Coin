/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let CalendarDescription = /*@__PURE__*/ (() => {
    class CalendarDescription extends Description {
        constructor() {
            super();
            this.k = new Date();
            this.j = new Date();
            this.i = new Date();
            this.h = new Date();
            this.v = null;
            this.s = null;
            this.r = null;
            this.ac = null;
            this.ae = null;
            this.w = null;
            this.ab = null;
            this.af = null;
            this.ad = null;
            this.x = null;
            this.u = null;
            this.t = null;
            this.f = false;
            this.y = null;
            this.p = 0;
            this.z = null;
            this.aa = null;
            this.ag = null;
        }
        get_type() {
            return "Calendar";
        }
        get type() {
            return this.get_type();
        }
        get value() {
            return this.k;
        }
        set value(a) {
            this.k = a;
            this.e("Value");
        }
        get today() {
            return this.j;
        }
        set today(a) {
            this.j = a;
            this.e("Today");
        }
        get minDate() {
            return this.i;
        }
        set minDate(a) {
            this.i = a;
            this.e("MinDate");
        }
        get maxDate() {
            return this.h;
        }
        set maxDate(a) {
            this.h = a;
            this.e("MaxDate");
        }
        get density() {
            return this.v;
        }
        set density(a) {
            this.v = a;
            this.e("Density");
        }
        get baseTheme() {
            return this.s;
        }
        set baseTheme(a) {
            this.s = a;
            this.e("BaseTheme");
        }
        get backgroundColor() {
            return this.r;
        }
        set backgroundColor(a) {
            this.r = a;
            this.e("BackgroundColor");
        }
        get selectedDateBackgroundColor() {
            return this.ac;
        }
        set selectedDateBackgroundColor(a) {
            this.ac = a;
            this.e("SelectedDateBackgroundColor");
        }
        get selectedFocusDateBackgroundColor() {
            return this.ae;
        }
        set selectedFocusDateBackgroundColor(a) {
            this.ae = a;
            this.e("SelectedFocusDateBackgroundColor");
        }
        get focusDateBackgroundColor() {
            return this.w;
        }
        set focusDateBackgroundColor(a) {
            this.w = a;
            this.e("FocusDateBackgroundColor");
        }
        get hoverBackgroundColor() {
            return this.ab;
        }
        set hoverBackgroundColor(a) {
            this.ab = a;
            this.e("HoverBackgroundColor");
        }
        get textColor() {
            return this.af;
        }
        set textColor(a) {
            this.af = a;
            this.e("TextColor");
        }
        get selectedDateTextColor() {
            return this.ad;
        }
        set selectedDateTextColor(a) {
            this.ad = a;
            this.e("SelectedDateTextColor");
        }
        get focusDateTextColor() {
            return this.x;
        }
        set focusDateTextColor(a) {
            this.x = a;
            this.e("FocusDateTextColor");
        }
        get currentDateTextColor() {
            return this.u;
        }
        set currentDateTextColor(a) {
            this.u = a;
            this.e("CurrentDateTextColor");
        }
        get currentDateBorderColor() {
            return this.t;
        }
        set currentDateBorderColor(a) {
            this.t = a;
            this.e("CurrentDateBorderColor");
        }
        get showTodayButton() {
            return this.f;
        }
        set showTodayButton(a) {
            this.f = a;
            this.e("ShowTodayButton");
        }
        get fontFamily() {
            return this.y;
        }
        set fontFamily(a) {
            this.y = a;
            this.e("FontFamily");
        }
        get fontSize() {
            return this.p;
        }
        set fontSize(a) {
            this.p = a;
            this.e("FontSize");
        }
        get fontStyle() {
            return this.z;
        }
        set fontStyle(a) {
            this.z = a;
            this.e("FontStyle");
        }
        get fontWeight() {
            return this.aa;
        }
        set fontWeight(a) {
            this.aa = a;
            this.e("FontWeight");
        }
        get valueChangedRef() {
            return this.ag;
        }
        set valueChangedRef(a) {
            this.ag = a;
            this.e("ValueChangedRef");
        }
    }
    CalendarDescription.$t = /*@__PURE__*/ markType(CalendarDescription, 'CalendarDescription', Description.$);
    return CalendarDescription;
})();
//# sourceMappingURL=CalendarDescription.js.map
